{
  "name": "reynard-algorithms",
  "version": "0.3.0",
  "description": "Algorithm primitives and data structures for Reynard applications",
  "type": "module",
  "main": "./dist/index.js",
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "require": "./dist/index.cjs"
    }
  },
  "files": [
    "dist"
  ],
  "scripts": {
    "dev": "vite build --watch",
    "build": "vite build && tsc -p tsconfig.json --emitDeclarationOnly --skipLibCheck",
    "build:types": "tsc -p tsconfig.json --emitDeclarationOnly --skipLibCheck",
    "test": "vitest run --exclude src/**/data-structures/*performance*.test.ts",
    "test:unit": "vitest run --exclude src/**/data-structures/*performance*.test.ts",
    "test:perf": "vitest run src/**/data-structures/*performance*.test.ts",
    "test:coverage": "vitest run --coverage",
    "test:coverage:check": "vitest run --coverage --reporter=verbose",
    "test:watch": "vitest watch --exclude src/**/data-structures/*performance*.test.ts",
    "test:watch:perf": "vitest watch src/**/data-structures/*performance*.test.ts",
    "test:ui": "vitest --ui --exclude src/**/data-structures/*performance*.test.ts",
    "typecheck": "tsc --noEmit --skipLibCheck",
    "typecheck:tests": "tsc --project tsconfig.tests.json",
    "lint": "eslint src examples --ext .ts,.tsx",
    "lint:fix": "eslint src examples --ext .ts,.tsx --fix",
    "format": "prettier --write src examples",
    "format:check": "prettier --check src examples",
    "examples": "tsx examples/basic-usage.ts",
    "examples:game": "tsx examples/game-engine-integration.ts",
    "clean": "rm -rf dist coverage"
  },
  "keywords": [
    "algorithms",
    "data-structures",
    "union-find",
    "collision-detection",
    "spatial-hashing",
    "geometry",
    "performance",
    "optimization",
    "game-development",
    "2d-graphics",
    "aabb",
    "spatial-indexing",
    "memory-pooling",
    "benchmarking",
    "solidjs",
    "typescript",
    "reynard",
    "priority-queue",
    "binary-heap",
    "lru-cache",
    "quadtree",
    "spatial-partitioning",
    "pathfinding",
    "a-star",
    "separating-axis-theorem",
    "sweep-and-prune",
    "bresenham",
    "delaunay-triangulation",
    "voronoi",
    "polygon-clipping",
    "line-intersection",
    "convex-hull",
    "marching-squares",
    "simplex-noise",
    "poisson-disk-sampling",
    "wave-function-collapse",
    "trie",
    "interval-tree",
    "bloom-filter",
    "segment-tree",
    "fenwick-tree",
    "r-tree",
    "kdtree",
    "octree",
    "bvh",
    "ray-tracing",
    "3d-graphics",
    "voxel",
    "frustum-culling",
    "sah",
    "surface-area-heuristic",
    "obb",
    "oriented-bounding-box",
    "sat",
    "separating-axis-theorem",
    "minimum-bounding-box",
    "rotating-calipers",
    "convex-hull",
    "jps",
    "jump-point-search",
    "theta-star",
    "any-angle-pathfinding",
    "line-of-sight",
    "flow-field",
    "vector-field",
    "integration-field",
    "crowd-pathfinding",
    "multi-agent-pathfinding",
    "pathfinding",
    "astar",
    "grid-pathfinding",
    "hpa-star",
    "hierarchical-pathfinding",
    "hierarchical-astar",
    "cluster-based-pathfinding",
    "abstract-graph",
    "path-refinement",
    "multi-level-pathfinding"
  ],
  "author": "entropy-tamer",
  "license": "MIT",
  "homepage": "https://github.com/entropy-tamer/reynard-algorithms",
  "repository": {
    "type": "git",
    "url": "https://github.com/entropy-tamer/reynard-algorithms.git"
  },
  "bugs": "https://github.com/entropy-tamer/reynard-algorithms/issues",
  "dependencies": {
    "solid-js": "1.9.9"
  },
  "devDependencies": {
    "@types/node": "24.7.1",
    "@vitest/coverage-v8": "3.2.4",
    "@vitest/ui": "3.2.4",
    "happy-dom": "20.0.0",
    "reynard-testing": "workspace:*",
    "typescript": "5.9.3",
    "vite": "7.1.9",
    "vite-plugin-solid": "2.11.9",
    "vitest": "3.2.4"
  },
  "peerDependencies": {
    "solid-js": "1.9.9"
  },
  "publishConfig": {
    "access": "public"
  }
}
